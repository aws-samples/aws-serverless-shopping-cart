AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  product-service

  SAM Template for mock product-service
Parameters:
  AllowedOrigin:
    Type: 'String'

  #Dynatrace SSM Parameters  
  DtOneAgentLambdaARNSSM:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/dt/OneAgentLambdaARN'
  DtAwsLambdaExecWrapperSSM:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/dt/LambdaExecWrapper'
  DtTenantSSM:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/dt/Tenant'
  DtClusterIdSSM:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/dt/LambdaExecWrapper'
  DtConnectionBaseUrlSSM:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/dt/ConnectionBaseUrl'
  DtConnectionAuthTokenSSM:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/dt/ConnectionAuthToken'
  DtOpenTelemetryEnableIntegrationSSM:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/dt/OpenTelemetryEnableIntegration'

Globals:
  Function:
    Timeout: 5
    Tracing: Active
    AutoPublishAlias: live
    Runtime: python3.8
    Layers:
      - !Ref DtOneAgentLambdaARNSSM
    MemorySize: 2048
    Environment:
      Variables:
        LOG_LEVEL: "DEBUG"
        ALLOWED_ORIGIN: !Ref AllowedOrigin
        POWERTOOLS_SERVICE_NAME: product-mock
        POWERTOOLS_METRICS_NAMESPACE: ecommerce-app
        # Dynatrace parameters
        AWS_LAMBDA_EXEC_WRAPPER: !Ref DtAwsLambdaExecWrapperSSM
        DT_TENANT: !Ref DtTenantSSM
        DT_CLUSTER_ID: !Ref DtClusterIdSSM
        DT_CONNECTION_BASE_URL: !Ref DtConnectionBaseUrlSSM
        DT_CONNECTION_AUTH_TOKEN: !Ref DtConnectionAuthTokenSSM
        DT_OPEN_TELEMETRY_ENABLE_INTEGRATION: !Ref DtOpenTelemetryEnableIntegrationSSM
  Api:
    EndpointConfiguration: REGIONAL
    TracingEnabled: true
    OpenApiVersion: '2.0'
    Cors:
      AllowMethods: "'OPTIONS,POST,GET'"
      # Additional Dynatrace headers
      AllowHeaders: "'Content-Type,Authorization,x-dynatrace,traceparent,tracestate,x-dtc,referer,host,x-forwarded-proto,x-forwarded-for,x-forwarded-port'"
      AllowOrigin: !Sub "'${AllowedOrigin}'"

Resources:
  GetProductFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: product-mock-service/
      Handler: get_product.lambda_handler
      Events:
        ListCart:
          Type: Api
          Properties:
            Path: /product/{product_id}
            Method: get

  GetProductsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: product-mock-service/
      Handler: get_products.lambda_handler
      Events:
        ListCart:
          Type: Api
          Properties:
            Path: /product
            Method: get

  GetProductApiUrl:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: /serverless-shopping-cart-demo/products/products-api-url
      Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"


Outputs:
  ProductApi:
    Description: "API Gateway endpoint URL for Prod stage for Product Mock Service"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
